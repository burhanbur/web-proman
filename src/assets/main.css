@import './base.css';

@tailwind base;
@tailwind components;
@tailwind utilities;

#app {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  font-weight: normal;
}

a,
.green {
  text-decoration: none;
  color: hsla(160, 100%, 37%, 1);
  transition: 0.4s;
  padding: 3px;
}

@media (hover: hover) {
  a:hover {
    background-color: hsla(160, 100%, 37%, 0.2);
  }
}

@media (min-width: 1024px) {
  body {
    display: flex;
    place-items: center;
  }

  /* Default app layout is two-column, but when showing auth pages
     (login/register) we want a full-width centered card. The
     `.auth-page` class is added to <body> by `AuthLayout.vue`. */
  #app {
    display: grid;
    grid-template-columns: 1fr 1fr;
    padding: 0 2rem;
  }

  /* Make auth pages span the full app width and center content */
  html.auth-page body, body.auth-page {
    display: block !important;
  }

  html.auth-page #app, body.auth-page #app, .auth-wrapper #app {
    display: block !important;
    padding: 0 !important;
    max-width: 100% !important;
    grid-template-columns: none !important;
  }

/* When an auth-wrapper is present, ensure the auth layout is full-bleed
   and the global #app grid doesn't constrain its width. */
@media (min-width: 1024px) {
  .auth-wrapper {
    width: 100vw;
    max-width: 100vw;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .auth-wrapper #app {
    display: block;
    max-width: 100%;
  }
}
}

/* Small helper to vertically center the password toggle with the input */
.pw-toggle {
  top: 50% !important;
  transform: translateY(-50%) !important;
}

/* If an auth page is active, disable the two-column app grid so the
   auth card can center and take the full available width. */
body.auth-page {
  display: block;
}

body.auth-page #app {
  display: block;
  max-width: 100%;
  padding: 0;
}

/* Small tweak: ensure the auth layout itself centers properly */
.public-layout {
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}
